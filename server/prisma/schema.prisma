generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserType {
  ADMIN
  USER
}

model User {
  id       Int        @id @default(autoincrement())
  name     String     @unique
  email    String     @unique
  password String
  userType UserType
  plans    UserPlan[]
  chats    Chat[]
  messages Message[]
}

model Chat {
  id            Int       @id @default(autoincrement())
  userId        Int
  title         String
  url           String
  totalMessages Int
  user          User      @relation(fields: [userId], references: [id])
  messages      Message[]
}

enum PlanStatus {
  ACTIVE
  INACTIVE
  EXPIRED
}

model UserPlan {
  id                 Int         @id @default(autoincrement())
  userId             Int
  pricingPlanId      Int
  status             PlanStatus
  totalNumberOfChats Int
  totalNumberOfMsgs  Int
  startDate          DateTime    @default(now())
  endDate            DateTime
  createdAt          DateTime    @default(now())
  updatedAt          DateTime    @updatedAt
  user               User        @relation(fields: [userId], references: [id])
  pricingPlan        PricingPlan @relation(fields: [pricingPlanId], references: [id])

  @@unique([userId, pricingPlanId])
}

model PricingPlan {
  id              Int        @id @default(autoincrement())
  planName        String     @unique
  price           Float
  numberOfChats   Int
  messagesPerChat Int
  features        String[]
  userPlans       UserPlan[]
}

model Message {
  id       Int    @id @default(autoincrement())
  chatId   Int
  userId   Int
  query    String
  response String
  chat     Chat   @relation(fields: [chatId], references: [id])
  user     User   @relation(fields: [userId], references: [id])
}
